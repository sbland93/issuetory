{"version":3,"sources":["../../../../server/components/mails/mail.service.js"],"names":[],"mappings":";;;;;QAqCgB,Q,GAAA,Q;AArChB,IAAI,aAAa,QAAQ,YAAR,CAAjB;AACA,IAAI,IAAI,QAAQ,GAAR,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,IAAI,cAAc,WAAW,eAAX,CAA2B,uDAA3B,CAAlB;;AAGO,SAAS,QAAT,CAAkB,OAAlB,EAA0B;;AAE7B,YAAQ,GAAR,CAAY,qDAAZ;AACH,QAAI,WAAW,EAAE,KAAF,EAAf;;AAEA,QAAG,CAAC,QAAQ,EAAT,IAAe,CAAC,QAAQ,OAA3B,EAAmC;AAClC,eAAO,SAAS,MAAT,CAAgB,OAAhB,CAAP;AACA,KAFD,MAEO,IAAG,CAAC,QAAQ,IAAZ,EAAiB;AACvB,gBAAQ,IAAR,GAAe,yCAAf;AACA;;AAED,gBAAY,QAAZ,CAAqB,OAArB,EAA8B,UAAS,KAAT,EAAgB,IAAhB,EAAqB;AAC5C,YAAG,KAAH,EAAS;AACL,oBAAQ,GAAR,CAAY,kBAAZ,EAAgC,KAAhC;AACA,mBAAO,SAAS,MAAT,CAAgB,KAAhB,CAAP;AACH;AACD,gBAAQ,GAAR,CAAY,6FAAZ;AACA,iBAAS,OAAT,CAAiB,IAAjB;AACH,KAPJ;;AAWG,WAAO,SAAS,OAAhB;AACH","file":"mail.service.js","sourcesContent":["var nodemailer = require('nodemailer');\r\nvar q = require('q');\r\n\r\n/*\r\n// create reusable transporter object using the default SMTP transport\r\nvar transporter = nodemailer.createTransport('smtps://user%40gmail.com:pass@smtp.gmail.com');\r\n\r\n// setup e-mail data with unicode symbols\r\nvar mailOptions = {\r\n    from: '\"Fred Foo üë•\" <foo@blurdybloop.com>', // sender address\r\n    to: 'bar@blurdybloop.com, baz@blurdybloop.com', // list of receivers\r\n    subject: 'Hello ‚úî', // Subject line\r\n    text: 'Hello world üê¥', // plaintext body\r\n    html: '<b>Hello world üê¥</b>' // html body\r\n};\r\n\r\n// send mail with defined transport object\r\ntransporter.sendMail(mailOptions, function(error, info){\r\n    if(error){\r\n        return console.log(error);\r\n    }\r\n    console.log('Message sent: ' + info.response);\r\n});\r\n\r\n*/\r\n\r\n/*var transporter = nodemailer.createTransport(\"SMTP\", {\r\n    service: 'Gmail',\r\n    auth: {\r\n        user: 'rltmqj@gmail.com',\r\n        pass: 'remind2015-'\r\n    }\r\n});*/\r\n\r\nvar transporter = nodemailer.createTransport('smtps://rltmqj%40gmail.com:remind2015-@smtp.gmail.com');\r\n\r\n\r\nexport function sendMail(options){\r\n\r\n    console.log('For Test: sendMail() is called [mail.service.js 38]');\r\n\tvar deferred = q.defer();\r\n\t\r\n\tif(!options.to || !options.subject){\r\n\t\treturn deferred.reject('error');\r\n\t} else if(!options.from){\r\n\t\toptions.from = '\"constructive üë•\" <foo@blurdybloop.com>';\r\n\t}\r\n\r\n\ttransporter.sendMail(options, function(error, info){\r\n        if(error){\r\n            console.log('For Test: error!', error);\r\n            return deferred.reject(error);\r\n        }\r\n        console.log('For Test: sendMail() is called and transporter.sendMail is called also [mail.service.js 51]');\r\n        deferred.resolve(info);\r\n    });\r\n\r\n    \r\n\r\n    return deferred.promise;\r\n}"]}