{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AANA,QAAQ,iCAAR;;AAIA,mBAAS,OAAT,GAAmB,QAAQ,UAAR,CAAnB;;;;AAKA,mBAAS,OAAT,CAAiB,sBAAO,KAAP,CAAa,GAA9B,EAAmC,sBAAO,KAAP,CAAa,OAAhD;AACA,mBAAS,UAAT,CAAoB,EAApB,CAAuB,OAAvB,EAAgC,UAAS,GAAT,EAAc;AAC5C,UAAQ,KAAR,CAAc,+BAA+B,GAA7C;AACA,UAAQ,IAAR,CAAa,CAAC,CAAd;AACD,CAHD;;;AAMA,IAAI,sBAAO,MAAX,EAAmB;AAAE,UAAQ,eAAR;AAA2B;;;AAGhD,IAAI,MAAM,wBAAV;AACA,IAAI,SAAS,eAAK,YAAL,CAAkB,GAAlB,CAAb;AACA,IAAI,WAAW,QAAQ,WAAR,EAAqB,MAArB,EAA6B;AAC1C,eAAa,sBAAO,GAAP,KAAe,YADc;AAE1C,QAAM;AAFoC,CAA7B,CAAf;AAIA,QAAQ,mBAAR,EAA6B,OAA7B,CAAqC,QAArC;AACA,QAAQ,kBAAR,EAA4B,OAA5B,CAAoC,GAApC;AACA,QAAQ,UAAR,EAAoB,OAApB,CAA4B,GAA5B;;;AAGA,SAAS,WAAT,GAAuB;AACrB,MAAI,gBAAJ,GAAuB,OAAO,MAAP,CAAc,sBAAO,IAArB,EAA2B,sBAAO,EAAlC,EAAsC,YAAW;AACtE,YAAQ,GAAR,CAAY,4CAAZ,EAA0D,sBAAO,IAAjE,EAAuE,IAAI,GAAJ,CAAQ,KAAR,CAAvE;AACD,GAFsB,CAAvB;AAGD;;AAED,4BAAa,WAAb;;;AAGA,UAAU,OAAO,OAAP,GAAiB,GAA3B","file":"app.js","sourcesContent":["/**\r\n * Main application file\r\n */\r\n\r\n'use strict';\r\n\r\nrequire('./components/utilities/requires');\r\n\r\nimport express from 'express';\r\nimport mongoose from 'mongoose';\r\nmongoose.Promise = require('bluebird');\r\nimport config from './config/environment';\r\nimport http from 'http';\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(config.mongo.uri, config.mongo.options);\r\nmongoose.connection.on('error', function(err) {\r\n  console.error('MongoDB connection error: ' + err);\r\n  process.exit(-1);\r\n});\r\n\r\n// Populate databases with sample data\r\nif (config.seedDB) { require('./config/seed'); }\r\n\r\n// Setup server\r\nvar app = express();\r\nvar server = http.createServer(app);\r\nvar socketio = require('socket.io')(server, {\r\n  serveClient: config.env !== 'production',\r\n  path: '/socket.io-client'\r\n});\r\nrequire('./config/socketio').default(socketio);\r\nrequire('./config/express').default(app);\r\nrequire('./routes').default(app);\r\n\r\n// Start server\r\nfunction startServer() {\r\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\r\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\r\n  });\r\n}\r\n\r\nsetImmediate(startServer);\r\n\r\n// Expose app\r\nexports = module.exports = app;\r\n"]}