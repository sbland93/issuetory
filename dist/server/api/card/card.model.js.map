{"version":3,"sources":["../../../../server/api/card/card.model.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;;;AACA,IAAI,eAAe,QAAQ,wBAAR,qBAAnB;;AAEA,IAAI,SAAS,mBAAS,MAAtB;;AAEA,IAAI,kBAAkB,IAAI,MAAJ,CAAW;AAChC,QAAO,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EADyB;AAEhC,MAAK,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB;AAF2B,CAAX,CAAtB;;AAMA,IAAI,aAAa,EAAE,MAAM,IAAR,EAAc,SAAS,KAAK,GAA5B,EAAjB;;AAGA,IAAI,oBAAoB,IAAI,MAAJ,CAAW;AAClC,cAAa,EAAE,MAAM,OAAO,KAAP,CAAa,QAArB,EAA+B,KAAI,MAAnC,EADqB;AAElC,aAAY,UAFsB;AAGlC,QAAO,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAH2B;AAIlC,OAAM,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAJ4B;AAKlC,OAAM,CAAC,eAAD,CAL4B;AAMlC,UAAS,CAAC,EAAC,MAAK,MAAN,EAAD;AANyB,CAAX,CAAxB;;AAUA,IAAI,aAAa,IAAI,MAAJ,CAAW;AAC3B,UAAS,EAAE,MAAM,OAAO,KAAP,CAAa,QAArB,EAA+B,KAAK,MAApC,EAA4C,UAAU,IAAtD,EADkB;AAE3B,cAAa,CAAC,EAAE,MAAM,OAAO,KAAP,CAAa,QAArB,EAA+B,KAAK,MAApC,EAAD,CAFc;AAG3B,aAAY,UAHe;AAI3B,SAAQ,EAAC,MAAM,MAAP,EAAe,SAAS,CAAxB,EAA2B,OAAO,IAAlC,EAJmB;AAK3B,MAAK,EAAC,MAAM,CAAC,EAAC,MAAM,OAAO,KAAP,CAAa,QAApB,EAA8B,KAAK,MAAnC,EAAD,CAAP,EAAqD,SAAS,EAA9D,EALsB;AAM3B,WAAU,CAAC,EAAC,MAAM,OAAO,KAAP,CAAa,QAApB,EAA8B,KAAK,SAAnC,EAAD,CANiB;AAO3B,WAAU,CAAC,iBAAD;AAPiB,CAAX,CAAjB;;AAWA,WAAW,IAAX,CAAgB,UAAhB,EAA4B,QAA5B,CAAqC,UAAS,QAAT,EAAkB;AACnD,KAAG,CAAC,QAAJ,EAAa;AAAE,UAAQ,GAAR,CAAY,WAAZ,EAA0B,OAAO,KAAP;AAAa,EAAtD,MACK,IAAG,SAAS,MAAT,KAAoB,CAAvB,EAAyB;AAAE,UAAQ,GAAR,CAAY,gBAAZ,EAA+B,OAAO,KAAP;AAAa;AAC5E,QAAO,IAAP;AACH,CAJD,EAIG,mCAJH;;AASA,WAAW,MAAX,CAAkB,YAAlB;;kBAGe,mBAAS,KAAT,CAAe,MAAf,EAAuB,UAAvB,C","file":"card.model.js","sourcesContent":["'use strict';\r\n\r\nimport mongoose from 'mongoose';\r\nimport User from '../user/user.model';\r\nvar deepPopulate = require('mongoose-deep-populate')(mongoose);\r\n\r\nvar Schema = mongoose.Schema;\r\n\r\nvar ReferenceSchema = new Schema({\r\n\ttitle: {type: String, required: true},\r\n\turl: {type: String, required: true}\r\n});\r\n\r\n\r\nvar DateSchema = { type: Date, default: Date.now};\r\n\r\n\r\nvar CardVersionSchema = new Schema({\r\n\tcontributor: { type: Schema.Types.ObjectId, ref:'User'},\r\n\tcreated_at: DateSchema,\r\n\ttitle: {type: String, required: true},\r\n\tidea: {type: String, required: true},\r\n\tlink: [ReferenceSchema],\r\n\tkeyword: [{type:String}]\r\n})\r\n\r\n\r\nvar CardSchema = new Schema({\r\n\tcreator: { type: Schema.Types.ObjectId, ref: 'User', required: true},\r\n\tcontributor: [{ type: Schema.Types.ObjectId, ref: 'User'}],\r\n\tcreated_at: DateSchema,\r\n\tupvote: {type: Number, default: 0, index: true},\r\n\thit: {type: [{type: Schema.Types.ObjectId, ref: 'User'}], default: []},\r\n\tcomments: [{type: Schema.Types.ObjectId, ref: 'Comment'}],\r\n\tversions: [CardVersionSchema]\r\n});\r\n\r\n\r\nCardSchema.path('versions').validate(function(versions){\r\n    if(!versions){ console.log('noversion'); return false}\r\n    else if(versions.length === 0){ console.log('version length'); return false}\r\n    return true;\r\n}, 'Card needs to have title and idea');\r\n\r\n\r\n\r\n\r\nCardSchema.plugin(deepPopulate);\r\n\r\n\r\nexport default mongoose.model('Card', CardSchema);\r\n"]}