{"version":3,"sources":["../../../../server/api/comment/comment.controller.js"],"names":[],"mappings":";;;;;;;;;AASA;;;;;;;;;;QAwDgB,K,GAAA,K;QAOA,I,GAAA,I;QAaA,M,GAAA,M;QA4CA,M,GAAA,M;QAYA,O,GAAA,O;QAQA,a,GAAA,a;QAiBA,a,GAAA,a;QAsBA,G,GAAA,G;;AAjLhB;;;;AACA;;;;AACA;;;;;;AAEA,SAAS,iBAAT,CAA2B,GAA3B,EAAgC,UAAhC,EAA4C;AAC1C,eAAa,cAAc,GAA3B;AACA,SAAO,UAAS,MAAT,EAAiB;AACtB,YAAQ,GAAR,CAAY,kBAAZ,EAAgC,MAAhC;AACA,QAAI,MAAJ,EAAY;AACV,UAAI,MAAJ,CAAW,UAAX,EAAuB,IAAvB,CAA4B,MAA5B;AACD;AACF,GALD;AAMD;;AAED,SAAS,WAAT,CAAqB,OAArB,EAA8B;AAC5B,SAAO,UAAS,MAAT,EAAiB;AACtB,QAAI,UAAU,iBAAE,KAAF,CAAQ,MAAR,EAAgB,OAAhB,CAAd;AACA,YAAQ,YAAR,CAAqB,KAArB;AACA,WAAO,QAAQ,IAAR,GACJ,IADI,CACC,mBAAW;AACf,aAAO,OAAP;AACD,KAHI,CAAP;AAID,GAPD;AAQD;;AAED,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,SAAO,UAAS,MAAT,EAAiB;AACtB,QAAI,MAAJ,EAAY;AACV,aAAO,OAAO,MAAP,GACJ,IADI,CACC,YAAM;AACV,YAAI,MAAJ,CAAW,GAAX,EAAgB,GAAhB;AACD,OAHI,CAAP;AAID;AACF,GAPD;AAQD;;AAED,SAAS,oBAAT,CAA8B,GAA9B,EAAmC;AACjC,SAAO,UAAS,MAAT,EAAiB;AACtB,QAAI,CAAC,MAAL,EAAa;AACX,UAAI,MAAJ,CAAW,GAAX,EAAgB,GAAhB;AACA,aAAO,IAAP;AACD;AACD,WAAO,MAAP;AACD,GAND;AAOD;;AAED,SAAS,WAAT,CAAqB,GAArB,EAA0B,UAA1B,EAAsC;AACpC,eAAa,cAAc,GAA3B;AACA,SAAO,UAAS,GAAT,EAAc;AACnB,QAAI,MAAJ,CAAW,UAAX,EAAuB,IAAvB,CAA4B,GAA5B;AACD,GAFD;AAGD;;;AAGM,SAAS,KAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB;AAC9B,SAAO,kBAAQ,IAAR,GAAe,IAAf,CAAoB,EAAE,QAAQ,CAAC,CAAX,EAApB,EAAoC,IAApC,GACJ,IADI,CACC,kBAAkB,GAAlB,CADD,EAEJ,KAFI,CAEE,YAAY,GAAZ,CAFF,CAAP;AAGD;;;AAGM,SAAS,IAAT,CAAc,GAAd,EAAmB,GAAnB,EAAwB;AAC7B,SAAO,kBAAQ,QAAR,CAAiB,IAAI,MAAJ,CAAW,EAA5B,EAAgC,QAAhC,CAAyC,SAAzC,EACN,YADM,CACO,sBADP,EAC+B,IAD/B,GAEJ,IAFI,CAEC,qBAAqB,GAArB,CAFD,EAGJ,IAHI,CAGC,kBAAkB,GAAlB,CAHD,EAIJ,KAJI,CAIE,YAAY,GAAZ,CAJF,CAAP;AAKD;;;;;AAOM,SAAS,MAAT,CAAgB,GAAhB,EAAqB,GAArB,EAA0B;AAC/B,MAAI,IAAJ,CAAS,OAAT,GAAmB,IAAI,IAAJ,CAAS,GAA5B;AACA,MAAI,SAAS,IAAI,IAAJ,CAAS,MAAtB;AACA,MAAI,cAAJ;AACA,SAAO,IAAI,IAAJ,CAAS,MAAhB;AACA,UAAQ,GAAR,CAAY,UAAZ,EAAwB,yBAAe,IAAI,IAAnB,CAAxB;AACA,SAAO,kBAAQ,MAAR,CAAe,IAAI,IAAnB,EACF,IADE,CACG,UAAS,OAAT,EAAiB;AACnB,YAAQ,GAAR,CAAY,+BAAZ,EAA6C,OAA7C;AACA,WAAO,kBAAQ,QAAR,CAAiB,OAAjB,EAA0B,EAAC,MAAM,SAAP,EAA1B,CAAP;AACH,GAJE,EAKF,IALE,CAKG,UAAS,QAAT,EAAkB;AACpB,YAAQ,GAAR,CAAY,iCAAZ,EAA+C,QAA/C;AACA,qBAAiB,QAAjB;AACA,WAAO,eAAK,QAAL,CAAc,MAAd,EAAsB,IAAtB,EAAP;AACH,GATE,EAUF,IAVE,CAUG,UAAS,IAAT,EAAc;AAChB,YAAQ,GAAR,CAAY,0BAAZ,EAAwC,IAAxC;AACA,SAAK,QAAL,CAAc,IAAd,CAAmB,eAAe,GAAlC;AACA,WAAO,KAAK,IAAL,EAAP;AACH,GAdE,EAeF,IAfE,CAeG,UAAS,GAAT,EAAa;AACf,QAAG,GAAH,EAAQ,OAAO,GAAP;AACR,WAAO,KAAK,QAAL,CAAc,IAAI,IAAJ,CAAS,OAAvB,EAAgC,IAAhC,EAAP;AACH,GAlBE,EAmBF,IAnBE,CAmBG,UAAS,IAAT,EAAc;AAChB,YAAQ,GAAR,CAAY,oBAAZ,EAAkC,IAAlC;AACA,SAAK,QAAL,CAAc,IAAd,CAAmB,eAAe,GAAlC;AACA,WAAO,KAAK,IAAL,EAAP;AACH,GAvBE,EAwBF,IAxBE,CAwBG,UAAS,GAAT,EAAa;;AAEf,YAAQ,GAAR,CAAY,8BAAZ,EAA4C,cAA5C;AACA,WAAO,cAAP;AACH,GA5BE,EA6BF,IA7BE,CA6BG,kBAAkB,GAAlB,EAAuB,GAAvB,CA7BH,EA8BF,KA9BE,CA8BI,YAAY,GAAZ,CA9BJ,CAAP;AA+BD;;;AAOM,SAAS,MAAT,CAAgB,GAAhB,EAAqB,GAArB,EAA0B;AAC/B,MAAI,IAAI,IAAJ,CAAS,GAAb,EAAkB;AAChB,WAAO,IAAI,IAAJ,CAAS,GAAhB;AACD;AACD,SAAO,kBAAQ,QAAR,CAAiB,IAAI,MAAJ,CAAW,EAA5B,EAAgC,IAAhC,GACJ,IADI,CACC,qBAAqB,GAArB,CADD,EAEJ,IAFI,CAEC,YAAY,IAAI,IAAhB,CAFD,EAGJ,IAHI,CAGC,kBAAkB,GAAlB,CAHD,EAIJ,KAJI,CAIE,YAAY,GAAZ,CAJF,CAAP;AAKD;;;AAGM,SAAS,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B;AAChC,SAAO,kBAAQ,QAAR,CAAiB,IAAI,MAAJ,CAAW,EAA5B,EAAgC,IAAhC,GACJ,IADI,CACC,qBAAqB,GAArB,CADD,EAEJ,IAFI,CAEC,aAAa,GAAb,CAFD,EAGJ,KAHI,CAGE,YAAY,GAAZ,CAHF,CAAP;AAID;;AAGM,SAAS,aAAT,CAAuB,GAAvB,EAA4B,GAA5B,EAAgC;AACrC,UAAQ,GAAR,CAAY,gBAAZ,EAA6B,IAAI,MAAJ,CAAW,EAAxC;AACA,UAAQ,GAAR,CAAY,yBAAZ,EAAuC,IAAI,IAAJ,CAAS,SAAhD;AACE,MAAI,aAAa,EAAC,OAAQ,IAAI,MAAJ,CAAW,EAApB,EAAjB;MACE,SAAS,EAAE,OAAQ,EAAC,YAAa,EAAC,KAAK,IAAI,IAAJ,CAAS,SAAf,EAAd,EAAV,EADX;MAEE,WAAW,SAAX,QAAW,CAAS,GAAT,EAAc,MAAd,EAAqB;AAChC,YAAQ,GAAR,CAAY,SAAZ,EAAuB,MAAvB;AACA,QAAG,GAAH,EAAQ,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,GAArB;AACR,QAAI,MAAJ,EAAY;AACZ,UAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,MAArB;AACC;AACF,GARD;AASF,SAAO,kBAAQ,MAAR,CAAe,UAAf,EAA2B,MAA3B,EAAmC,QAAnC,CAAP;AAED;;AAGM,SAAS,aAAT,CAAuB,GAAvB,EAA4B,GAA5B,EAAgC;AACnC,MAAI,IAAJ,CAAS,OAAT,CAAiB,WAAjB,GAA+B,IAAI,IAAnC;AACA,UAAQ,GAAR,CAAY,yCAAZ,EAAuD,IAAI,IAAJ,CAAS,OAAhE;AACA,UAAQ,GAAR,CAAY,eAAZ,EAA6B,IAAI,MAAJ,CAAW,EAAxC;;AAEA,oBAAQ,QAAR,CAAiB,IAAI,MAAJ,CAAW,EAA5B,EAAgC,IAAhC,GACG,IADH,CACQ,UAAS,OAAT,EAAiB;AACrB,YAAQ,GAAR,CAAY,SAAZ,EAAuB,OAAvB;AACA,QAAG,OAAH,EAAY;AACV,cAAQ,GAAR,CAAY,SAAZ,EAAuB,OAAvB;AACA,cAAQ,QAAR,CAAiB,OAAjB,CAAyB,IAAI,IAAJ,CAAS,OAAlC;AACA,aAAO,QAAQ,IAAR,EAAP;AACD;AACF,GARH,EASG,IATH,CASQ,UAAS,QAAT,EAAkB;AACtB,QAAG,QAAH,EAAa;AACX,aAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,QAArB,CAAP;AACD;AACF,GAbH;AAcH;;AAGM,SAAS,GAAT,CAAa,GAAb,EAAkB,GAAlB,EAAsB;AAC3B,UAAQ,GAAR,CAAY,kCAAZ;AACA,UAAQ,GAAR,CAAY,uBAAZ,EAAqC,IAAI,IAAJ,CAAS,GAA9C;AACA,oBAAQ,QAAR,CAAiB,IAAI,MAAJ,CAAW,EAA5B,EAAgC,IAAhC,GACK,IADL,CACU,UAAS,OAAT,EAAiB;AACrB,QAAG,OAAH,EAAY;AACV,cAAQ,GAAR,CAAY,mBAAZ,EAAiC,QAAQ,MAAzC;AACA,cAAQ,GAAR,CAAY,qBAAZ,EAAmC,IAAI,IAAJ,CAAS,UAA5C;AACA,UAAG,CAAC,IAAI,IAAJ,CAAS,UAAb,EAAwB;AACtB,gBAAQ,GAAR,CAAY,IAAZ,CAAiB,IAAI,IAAJ,CAAS,GAA1B;AACA,gBAAQ,MAAR,GAAiB,QAAQ,MAAR,GAAiB,CAAlC;AACD,OAHD,MAIK,IAAG,IAAI,IAAJ,CAAS,UAAZ,EAAuB;AAC1B,YAAI,QAAQ,QAAQ,GAAR,CAAY,OAAZ,CAAoB,IAAI,IAAJ,CAAS,GAA7B,CAAZ;AACA,gBAAQ,GAAR,CAAY,wBAAZ,EAAsC,KAAtC;AACA,gBAAQ,GAAR,CAAY,MAAZ,CAAmB,KAAnB,EAA0B,CAA1B;AACA,gBAAQ,MAAR,GAAiB,QAAQ,MAAR,GAAiB,CAAlC;AACD;AACD,cAAQ,GAAR,CAAY,kCAAZ,EAAgD,QAAQ,MAAxD;AACA,aAAO,QAAQ,IAAR,EAAP;AACD;AACF,GAlBL,EAkBO,UAAS,GAAT,EAAa;AACd,YAAQ,GAAR,CAAY,KAAZ,EAAmB,GAAnB;AACA,QAAG,GAAH,EAAO;AACL,aAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,GAArB,CAAP;AACD;AACF,GAvBL,EAwBK,IAxBL,CAwBU,UAAS,OAAT,EAAiB;AACrB,QAAG,OAAH,EAAY;AACV,cAAQ,GAAR,CAAY,SAAZ,EAAuB,OAAvB;AACA,aAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,OAArB,CAAP;AACD;AACF,GA7BL;AA+BD","file":"comment.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/comments              ->  index\r\n * POST    /api/comments              ->  create\r\n * GET     /api/comments/:id          ->  show\r\n * PUT     /api/comments/:id          ->  update\r\n * DELETE  /api/comments/:id          ->  destroy\r\n */\r\n\r\n'use strict';\r\n\r\nimport _ from 'lodash';\r\nimport Comment from './comment.model';\r\nimport Card from '../card/card.model';\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    console.log('For Test: entity', entity);\r\n    if (entity) {\r\n      res.status(statusCode).json(entity);\r\n    }\r\n  };\r\n}\r\n\r\nfunction saveUpdates(updates) {\r\n  return function(entity) {\r\n    var updated = _.merge(entity, updates);\r\n    updated.markModified('hit');\r\n    return updated.save()\r\n      .then(updated => {\r\n        return updated;\r\n      });\r\n  };\r\n}\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if (entity) {\r\n      return entity.remove()\r\n        .then(() => {\r\n          res.status(204).end();\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if (!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\n// Gets a list of Comments\r\nexport function index(req, res) {\r\n  return Comment.find().sort({ upvote: -1 }).exec()\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Gets a single Comment from the DB\r\nexport function show(req, res) {\r\n  return Comment.findById(req.params.id).populate('creator')\r\n  .deepPopulate('versions.contributor').exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n\r\n\r\n// Creates a new Comment in the DB\r\n// And, Put the Comment Id into the Card.\r\n// And , Put the Comment Id into the User.\r\nexport function create(req, res) {\r\n  req.body.creator = req.user._id;\r\n  var cardId = req.body.cardId;\r\n  var _returnComment;\r\n  delete req.body.cardId;\r\n  console.log('req.body', JSON.stringify(req.body));\r\n  return Comment.create(req.body)\r\n      .then(function(comment){\r\n          console.log('For Test: created comment is ', comment);\r\n          return Comment.populate(comment, {path: 'creator'})\r\n      })\r\n      .then(function(_comment){\r\n          console.log('For Test: populated comment is ', _comment);\r\n          _returnComment = _comment;\r\n          return Card.findById(cardId).exec()\r\n      })\r\n      .then(function(card){\r\n          console.log('For Test: found card is ', card);\r\n          card.comments.push(_returnComment._id);\r\n          return card.save()          \r\n      })\r\n      .then(function(err){\r\n          if(err) return err;\r\n          return User.findById(req.body.creator).exec()\r\n      })\r\n      .then(function(user){\r\n          console.log('For Test: user is ', user);\r\n          user.comments.push(_returnComment._id);\r\n          return user.save()\r\n      })\r\n      .then(function(err){\r\n          //if(err) return err;\r\n          console.log('For Test: _returnComment is ', _returnComment);\r\n          return _returnComment;\r\n      })\r\n      .then(respondWithResult(res, 201))\r\n      .catch(handleError(res));   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Updates an existing Comment in the DB\r\nexport function update(req, res) {\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Comment.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(saveUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Comment from the DB\r\nexport function destroy(req, res) {\r\n  return Comment.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(removeEntity(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n\r\nexport function removeVersion(req, res){\r\n  console.log('req.params.id:',req.params.id);\r\n  console.log('update:req.body.version', req.body.versionId );\r\n    var conditions = {'_id' : req.params.id}\r\n    , update = { $pull : {\"versions\" : {_id: req.body.versionId}}}\r\n    , callback = function(err, entity){\r\n      console.log('entity:', entity);\r\n      if(err) res.status(500).send(err);\r\n      if (entity) {\r\n      res.status(200).json(entity);\r\n      }\r\n    }\r\n  return Comment.update(conditions, update, callback);\r\n\r\n}\r\n\r\n\r\nexport function updateVersion(req, res){\r\n    req.body.version.contributor = req.user;\r\n    console.log('update: updateVersion@@@@@@@@@@@@@@@@@@', req.body.version);\r\n    console.log('req.params.id', req.params.id);\r\n    //find & add version & save\r\n    Comment.findById(req.params.id).exec()\r\n      .then(function(comment){\r\n        console.log('comment', comment);\r\n        if(comment) {\r\n          console.log('comment' ,comment);\r\n          comment.versions.unshift(req.body.version);\r\n          return comment.save();\r\n        }\r\n      })\r\n      .then(function(_comment){\r\n        if(_comment) {\r\n          return res.status(200).send(_comment);\r\n        }\r\n      })\r\n}\r\n\r\n\r\nexport function hit(req, res){\r\n  console.log(\"For Test: hit function is called\");\r\n  console.log(\"For Test: req.user is\", req.user._id);\r\n  Comment.findById(req.params.id).exec()\r\n      .then(function(comment){\r\n        if(comment) {\r\n          console.log('upvote of comment', comment.upvote);\r\n          console.log('req.body.alreadyHit', req.body.alreadyHit);\r\n          if(!req.body.alreadyHit){\r\n            comment.hit.push(req.user._id);\r\n            comment.upvote = comment.upvote + 1;\r\n          }\r\n          else if(req.body.alreadyHit){\r\n            var index = comment.hit.indexOf(req.user._id);\r\n            console.log('For Test: indexOf user', index);\r\n            comment.hit.splice(index, 1);\r\n            comment.upvote = comment.upvote - 1;\r\n          }\r\n          console.log('upvote of comment after updating', comment.upvote);\r\n          return comment.save();\r\n        }\r\n      }, function(err){\r\n        console.log('err', err);\r\n        if(err){\r\n          return res.status(500).send(err);\r\n        }\r\n      })\r\n      .then(function(comment){\r\n        if(comment) {\r\n          console.log('comment', comment);\r\n          return res.status(200).send(comment);\r\n        }\r\n      })\r\n\r\n}"]}