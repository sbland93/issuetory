{"version":3,"sources":["../../../../server/api/comment/comment.model.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;AACA,IAAI,eAAe,QAAQ,wBAAR,qBAAnB;;AAEA,IAAI,SAAS,mBAAS,MAAtB;;AAGA,IAAI,kBAAkB,IAAI,MAAJ,CAAW;AAChC,QAAO,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EADyB;AAEhC,MAAK,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB;AAF2B,CAAX,CAAtB;;AAMA,IAAI,aAAa,EAAE,MAAM,IAAR,EAAc,SAAS,KAAK,GAA5B,EAAjB;;AAGA,IAAI,uBAAuB,IAAI,MAAJ,CAAW;AACrC,WAAW,EAAC,MAAM,MAAP,EAAe,KAAI,CAAnB,EAAsB,KAAI,CAA1B,EAA6B,UAAU,IAAvC,EAD0B;AAErC,cAAa,EAAE,MAAK,OAAO,KAAP,CAAa,QAApB,EAA8B,KAAK,MAAnC,EAFwB;AAGrC,aAAY,UAHyB;AAIrC,QAAO,EAAC,MAAM,MAAP,EAJ8B;AAKrC,OAAM,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAL+B;AAMrC,OAAM,CAAC,eAAD;AAN+B,CAAX,CAA3B;;AAUA,IAAI,gBAAgB,IAAI,MAAJ,CAAW;AAC9B,OAAO,EAAC,MAAM,OAAO,KAAP,CAAa,QAApB,EAA8B,KAAK,MAAnC,EADuB;AAE9B,UAAS,EAAE,MAAK,OAAO,KAAP,CAAa,QAApB,EAA8B,KAAK,MAAnC,EAFqB;AAG9B,aAAY,UAHkB;AAI9B,SAAQ,EAAC,MAAM,MAAP,EAAe,SAAS,CAAxB,EAA2B,OAAO,IAAlC,EAJsB;AAK9B,MAAK,CAAC,EAAC,MAAK,OAAO,KAAP,CAAa,QAAnB,EAA6B,KAAK,MAAlC,EAAD,CALyB;AAM9B,WAAU,CAAC,oBAAD;AANoB,CAAX,CAApB;;AAUA,IAAI,cAAc,IAAI,MAAJ,CAAW;AAC5B,UAAQ,EAAC,MAAK,OAAO,KAAP,CAAa,QAAnB,EAA6B,KAAK,MAAlC,EADoB;AAE5B,aAAY,UAFgB;AAG5B,OAAM,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAHsB;AAI5B,MAAK,CAAC,EAAC,MAAK,OAAO,KAAP,CAAa,QAAnB,EAA6B,KAAK,MAAlC,EAAD,CAJuB;AAK5B,OAAM,CAAC,eAAD;AALsB,CAAX,CAAlB;;AASA,cAAc,GAAd,CAAkB,EAAE,SAAS,CAAC,WAAD,CAAX,EAAlB;;AAGA,cAAc,IAAd,CAAmB,UAAnB,EAA+B,QAA/B,CAAwC,UAAS,QAAT,EAAkB;AACtD,KAAG,CAAC,QAAJ,EAAa;AAAC,SAAO,KAAP;AAAa,EAA3B,MACK,IAAG,SAAS,MAAT,KAAoB,CAAvB,EAAyB;AAAC,SAAO,KAAP;AAAa;AAC5C,QAAO,IAAP;AACH,CAJD,EAIG,sCAJH;;AASA,cAAc,MAAd,CAAqB,YAArB;;kBAEe,mBAAS,KAAT,CAAe,SAAf,EAA0B,aAA1B,C","file":"comment.model.js","sourcesContent":["'use strict';\r\n\r\nimport mongoose from 'mongoose';\r\nimport User from '../user/user.model';\r\nimport Card from '../card/card.model';\r\nvar deepPopulate = require('mongoose-deep-populate')(mongoose);\r\n\r\nvar Schema = mongoose.Schema;\r\n\r\n\r\nvar ReferenceSchema = new Schema({\r\n\ttitle: {type: String, required: true},\r\n\turl: {type: String, required: true}\r\n});\r\n\r\n\r\nvar DateSchema = { type: Date, default: Date.now};\r\n\r\n\r\nvar CommentVersionSchema = new Schema({\r\n\tcategory:  {type: Number, min:1, max:6, required: true},\r\n\tcontributor: { type:Schema.Types.ObjectId, ref: 'User'},\r\n\tupdated_at: DateSchema,\r\n\ttitle: {type: String},\r\n\tidea: {type: String, required: true},\r\n\tlink: [ReferenceSchema],\r\n});\r\n\r\n\r\nvar CommentSchema = new Schema({\r\n\tcard:  {type: Schema.Types.ObjectId, ref: 'Card'} ,\r\n\tcreator: { type:Schema.Types.ObjectId, ref: 'User'},\r\n\tcreated_at: DateSchema,\r\n\tupvote: {type: Number, default: 0, index: true},\r\n\thit: [{type:Schema.Types.ObjectId, ref: 'User'}] ,\r\n\tversions: [CommentVersionSchema]\r\n});\r\n\r\n\r\nvar ReplySchema = new Schema({\r\n\tcreator:{type:Schema.Types.ObjectId, ref: 'User'},\r\n\tcreated_at: DateSchema,\r\n\tidea: {type: String, required: true},\r\n\thit: [{type:Schema.Types.ObjectId, ref: 'User'}],\r\n\tlink: [ReferenceSchema]\r\n});\r\n\r\n\r\nCommentSchema.add({ replies: [ReplySchema]  });\r\n\r\n\r\nCommentSchema.path('versions').validate(function(versions){\r\n    if(!versions){return false}\r\n    else if(versions.length === 0){return false}\r\n    return true;\r\n}, 'Comment needs to have title and idea');\r\n\r\n\r\n\r\n\r\nCommentSchema.plugin(deepPopulate);\r\n\r\nexport default mongoose.model('Comment', CommentSchema);"]}