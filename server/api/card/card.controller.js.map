{"version":3,"sources":["../../../../server/api/card/card.controller.js"],"names":[],"mappings":"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","file":"card.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/cards              ->  index\r\n * POST    /api/cards              ->  create\r\n * GET     /api/cards/:id          ->  show\r\n * PUT     /api/cards/:id          ->  update\r\n * DELETE  /api/cards/:id          ->  destroy\r\n */\r\n\r\n'use strict';\r\n\r\nimport _ from 'lodash';\r\nimport Card from './card.model';\r\nimport User from '../user/user.model';\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n      return res.status(statusCode).json(entity);\r\n    }\r\n  };\r\n}\r\n\r\nfunction saveUpdates(updates) {\r\n  return function(entity) {\r\n    console.log('entity', entity);\r\n    var updated = _.merge(entity, updates);\r\n    console.log('updated', updated);\r\n    updated.markModified('hit');\r\n    return updated.save()\r\n      .then(updated => {\r\n        return updated;\r\n      });\r\n  };\r\n}\r\n\r\n\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if (entity) {\r\n      return entity.remove()\r\n        .then(() => {\r\n          res.status(204).end();\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if (!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\n// Gets a list of Cards\r\nexport function index(req, res) {\r\n  return Card.find().populate('creator', '_id').populate({\r\n    path: 'comments'\r\n  , options: { sort: { upvote: -1 }}\r\n}).sort({upvote: -1}).exec()\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Gets a single Card from the DB\r\nexport function show(req, res) {\r\n  return Card.findById(req.params.id).populate('creator')\r\n    .deepPopulate('versions.contributor comments.creator comments.versions.contributor').exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Creates a new Card in the DB and make the default of creator\r\nexport function create(req, res) {\r\n  req.body.creator = req.user._id;\r\n\r\n\r\n  return Card.create(req.body)\r\n    .then(function(entity){\r\n      User.findById(req.body.creator).then(function(user){\r\n        user.cards.push(entity._id);\r\n        user.save().then(function(err){\r\n          return entity;\r\n        })\r\n      .then(respondWithResult(res, 201))\r\n      .catch(handleError(res));\r\n      })\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n// Updates an existing Card in the DB\r\nexport function update(req, res) {\r\n  console.log('For Test: updating......');\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Card.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(saveUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Card from the DB\r\nexport function destroy(req, res) {\r\n  return Card.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(removeEntity(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n\r\nexport function updateVersion(req, res){\r\n    req.body.version.contributor = req.user;\r\n    console.log('update: updateVersion@@@@@@@@@@@@@@@@@@', req.body.version);\r\n    console.log('req.params.id', req.params.id);\r\n    //find & add version & save\r\n    Card.findById(req.params.id).exec()\r\n      .then(function(card){\r\n        console.log('card', card);\r\n        if(card) {\r\n          console.log('card' ,card);\r\n          card.versions.unshift(req.body.version);\r\n          return card.save();\r\n        }\r\n      })\r\n      .then(function(_card){\r\n        if(_card) {\r\n          console.log('_card in updateVersion is',_card);\r\n          return res.status(200).send(_card);\r\n        }\r\n      })\r\n}\r\n\r\n\r\n\r\nexport function removeVersion(req, res){\r\n  console.log('req.params.id:',req.params.id);\r\n  console.log('update:req.body.version', req.body.versionId );\r\n    var conditions = {'_id' : req.params.id}\r\n    , update = { $pull : {\"versions\" : {_id: req.body.versionId}}}\r\n    , callback = function(err, entity){\r\n      console.log('entity:', entity);\r\n      if(err) res.status(500).send(err);\r\n      if (entity) {\r\n      res.status(200).json(entity);\r\n      }\r\n    }\r\n  return Card.update(conditions, update, callback);\r\n\r\n}\r\n\r\n\r\n\r\nexport function hit(req, res){\r\n  console.log(\"For Test: hit function is called\");\r\n  console.log(\"For Test: req.user is\", req.user._id);\r\n  console.log(\"For Test: req.params.id\", req.params.id);\r\n  Card.findById(req.params.id).exec()\r\n      .then(function(card){\r\n        if(card) {\r\n          console.log('upvote of card' ,card.upvote);\r\n          console.log('req.body.alreadyHit', req.body.alreadyHit);\r\n          if(!req.body.alreadyHit){\r\n            card.hit.push(req.user._id);\r\n            card.upvote = card.upvote + 1;\r\n          }\r\n          else if(req.body.alreadyHit){\r\n            var index = card.hit.indexOf(req.user._id);\r\n            card.hit.splice(index, 1);\r\n            card.upvote = card.upvote - 1;\r\n          }\r\n\r\n          console.log('upvote of card after updating', card.upvote);\r\n          return card.save();\r\n        }\r\n      }, function(err){\r\n        console.log('err', err);\r\n        if(err){\r\n          return res.status(500).send(err);\r\n        }\r\n      })\r\n      .then(function(card){\r\n        if(card) {\r\n          console.log('card', card);\r\n          return res.status(200).send(card);\r\n        }\r\n      })\r\n}"]}